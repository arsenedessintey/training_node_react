// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Contrainte {
  contrainte_id   Int          @id @default(autoincrement())
  nom             String       @unique
  type_contrainte String
  valeur_regex    String
  activation      Boolean?     @default(true)
  
  //Champs
  champs          Field[]

  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt

}

model Sheet {
  sheet_id        Int          @id @default(autoincrement())
  nom             String       
  description     String?
  groupe          Groupe[]
  nomVersion      String
  activationSheet Boolean
  

  // Childs Sheet
  childSheet  Sheet[] @relation("childParentFiche")

  // Parent Sheet
  parentSheet Sheet? @relation("childParentFiche", fields: [parentSheetId], references: [sheet_id])
  parentSheetId Int?

  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt

  dossier          Dossier?      @relation(fields: [dossier_id], references: [dossier_id])
  dossier_id       Int?

  @@unique([nom, nomVersion])
}

model Field {
  field_id        Int          @id @default(autoincrement())
  nom             String
  ordre   	      Int          
  obligatoire     Boolean


  // Groupe
  groupe          Groupe?      @relation(fields: [groupe_id], references: [groupe_id])
  groupe_id       Int?

  //Constraint
  constraint Contrainte @relation(fields: [constraintId], references: [contrainte_id])
  constraintId Int

  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
}

model Groupe {
  groupe_id       Int          @id @default(autoincrement())
  nom             String
  ordre           Int
  champs          Field[]

  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt

  sheet          Sheet?      @relation(fields: [sheet_id], references: [sheet_id])
  sheet_id       Int?

}

model Dossier {
  dossier_id     Int          @id @default(autoincrement())
  nom            String
  sheet          Sheet[]      

  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt

  @@map("dossier")
}



